import std;

Foo1 struct {
    a int;
    b int;
    Foo1(a int, b int) {
        this.a = a;
        this.b = b;
    }
}

Foo2 struct {
    z int;
}

fn main() {
    a int* = new int{ 4 };
    std.print(*a);
    std.print(" ", 1);
    
    foo1 Foo1* = new Foo1{ 52, 9 };
    std.print(foo1.a);
    std.print(" ", 1);
    std.print(foo1.b);
    std.print(" ", 1);
    
    foo2 Foo2* = new Foo2{ 7 };
    std.print(foo2.z);
    std.print(" ", 1);
    
    arr int* = new int[4]{ [ 5, 23, 1, 5 ] };
    std.print(arr[0]);
    std.print(" ", 1);
    std.print(arr[1]);
    std.print(" ", 1);
    std.print(arr[2]);
    std.print(" ", 1);
    std.print(arr[3]);
    std.print(" ", 1);

    foos Foo1* = new Foo1[2]{ [ Foo1{ 5, 2 }, Foo1{ 6, 11 } ] };
    std.print(foos[0].a);
    std.print(" ", 1);
    std.print(foos[0].b);
    std.print(" ", 1);
    std.print(foos[1].a);
    std.print(" ", 1);
    std.print(foos[1].b);

    delete a;
    delete foo1;
    delete foo2;
    delete arr;
    delete foos;

}