import std;

native fn memcpy(dest void*, src const void*, count int) void;

fn foo1(buffer char[6]) {
    memcpy(buffer, "hello ", 6);
}
fn foo1_pass(buffer char[6]) {
    foo1(buffer);
}

fn foo2(buffer char[6][6]) {
    memcpy(buffer, "hello ", 6);
}
fn foo2_pass(buffer char[6][6]) {
    foo2(buffer);
}

fn foo3(buffer char[6][6][6]) {
    memcpy(buffer, "hello ", 6);
}
fn foo3_pass(buffer char[6][6][6]) {
    foo3(buffer);
}

fn main() {
    
    {
        buffer char[6];
        memcpy(buffer, "hello ", 6);
        std.print(buffer, 6);
    }
    {
        buffer char[6];
        foo1(buffer);
        std.print(buffer, 6);
    }
    {
        buffer char[6];
        foo1_pass(buffer);
        std.print(buffer, 6);
    }
    {
        buffer char[6][6];
        foo2(buffer);
        std.print(buffer[0], 6);
    }
    {
        buffer char[6][6];
        foo2_pass(buffer);
        std.print(buffer[0], 6);
    }
    {
        buffer char[6][6][6];
        foo3(buffer);
        std.print(buffer[0][0], 6);
    }
    {
        buffer char[6][6];
        memcpy(buffer, "hello ", 6);
        std.print(buffer[0], 6);
    }
    {
        buffer char[6][6][6];
        memcpy(buffer, "hello ", 6);
        std.print(buffer[0][0], 6);
    }
    {
        buffer char[6][6][6];
        foo3_pass(buffer);
        std.print(buffer[0][0], 6);
    }
}