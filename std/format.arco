
out OutStream = OutStream{ win32.GetStdHandle(-11), false };
err OutStream = OutStream{ win32.GetStdHandle(-12), false };

in  InStream  = InStream { win32.GetStdHandle(-10), false };

// TODO: Functions are redundent because there is no support for
//       templating yet!

// Functions for writing to std out.
//----------------------------------------------

fn print(i int64) {
	out.write(i);
}

fn print(i uint64) {
	out.write(i);
}

fn print(msg cstr) {
	out.write(msg);
}

fn print(msg String*) {
	out.write(msg);
}

fn println(msg cstr) {
	out.writeln(msg);
}

fn println(i int) {
	out.writeln(i);
}

fn println(i uint) {
	out.writeln(i);
}

fn println(msg String*) {
	out.writeln(msg);
}

fn println() {
	out.writeln();
}

// Functions for writing to std err.
//----------------------------------------------

fn eprint(i int64) {
	err.write(i);
}

fn eprint(i uint64) {
	err.write(i);
}

fn eprint(msg cstr) {
	err.write(msg);
}

fn eprint(msg String*) {
	err.write(msg);
}

fn eprintln(msg cstr) {
	err.writeln(msg);
}

fn eprintln(i int) {
	err.writeln(i);
}

fn eprintln(i uint) {
	err.writeln(i);
}

fn eprintln(msg String*) {
	err.writeln(msg);
}

fn eprintln() {
	err.writeln();
}

// Reading from terminal
//----------------------------------------------

fn read(buffer char*, length int) int {
	return in.read(buffer, length);
}

fn read_line() String {
	return in.read_line();
}